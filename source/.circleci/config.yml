version: 2.0

references:
  image_ruby: &image_ruby
    ruby:2.6
  # image_postgres: &image_postgres
  #   postgres:11-alpine

  cache_key_bundle: &cache_key_bundle
    v1-bundle-{{ checksum "gems.rb" }}
  cache_key_backup_bundle: &cache_key_backup_bundle
    v1-bundle-
  cache_path_bundle: &cache_path_bundle
    /usr/local/bundle
  restore_cache_bundle: &restore_cache_bundle
    restore_cache:
      keys:
        - *cache_key_bundle
        - *cache_key_backup_bundle

  cache_key_git: &cache_key_git
    v1-git-{{ .Environment.CIRCLE_SHA1 }}
  cache_key_backup_git: &cache_key_backup_git
    v1-git-
  cache_path_git: &cache_path_git
    /usr/src/app
  restore_cache_git: &restore_cache_git
    restore_cache:
      keys:
        - *cache_key_git
        - *cache_key_backup_git

jobs:
  checkout_code:
    docker:
      - image: *image_ruby
    working_directory: /usr/src/app
    steps:
      - checkout
      # - run:
      #     name: Decrypt secrets
      #     command: |
      #       echo $KEY > secrets.aes
      #       openssl enc \
      #         -in .circleci/secrets.encrypted \
      #         -out secrets.env \
      #         -d -aes256 \
      #         -pass file:secrets.aes
      - save_cache:
          key: *cache_key_git
          paths:
            - *cache_path_git

  run_bundle:
    docker:
      - image: *image_ruby
    working_directory: /usr/src/app
    steps:
      - *restore_cache_git
      - *restore_cache_bundle
      - run:
          name: Bundle
          command: |
            export BUNDLER_VERSION=2.0.1
            gem install bundler
            bundle check || \
              bundle install -j5 && \
              bundle clean
            rm -f gems.locked
      - save_cache:
          key: *cache_key_bundle
          paths:
            - *cache_path_bundle

  setup_and_test:
    docker:
      - image: *image_ruby
        environment:
          # EVENT_STORE_DATABASE_URL: postgresql://message_store@localhost:5432/message_store
          LOG_LEVEL: "error"
      # - image: *image_postgres
    working_directory: /usr/src/app
    steps:
      - *restore_cache_git
      - *restore_cache_bundle
      - run:
          name: Code Climate Test Reporter
          command: |
            cc_download_url=https://codeclimate.com/downloads/test-reporter/
            curl -L $cc_download_url/test-reporter-latest-linux-amd64 > ./cc
            chmod +x ./cc
      - run:
          name: Apt
          command: |
            # apt-get update -y
            # apt-get install -y --no-install-recommends \
            #   postgresql-client \
            #   libsybdb5
      - run:
          name: Setup
          command: |
            # export VIEW_DATA_DATABASE_URL=postgresql://postgres@localhost:5432/cache_db
            # export EVENT_STORE_DATABASE_URL=postgresql://postgres@localhost:5432/message_store

            # cd ./tkxs_components/
            # cp -R ./db/config/. .

            # export DATABASE=event_store
            # rake db:create db:migrate-event-store

            # export DATABASE=view_data
            # rake db:create db:migrate-view-data-prerequisites

            # export DATABASE_URL=postgresql://postgres@localhost:5432/cache_db
            # cd ..
            # rake db:migrate-all-components
      - run:
          name: Test
          command: |
            export BUNDLER_VERSION=2.0.1
            # export EVENT_STORE_DATABASE_URL=postgresql://postgres@localhost:5432/message_store
            # # notify code climate that a build is starting
            ./cc before-build
            # run the specs
            rake ci
            # notify code climate build is finished
            ./cc after-build -t simplecov
      - store_artifacts:
          path: ./coverage

workflows:
  version: 2
  build_test:
    jobs:
      - checkout_code
      - run_bundle:
          requires:
            - checkout_code
      - setup_and_test:
          requires:
            - run_bundle
